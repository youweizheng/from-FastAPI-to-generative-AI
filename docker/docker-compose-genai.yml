name: from-fastapi-2-genai

services:
  app_business:
    build:
      context: ..
      dockerfile: docker/Dockerfile.app
    container_name: "app_business"
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - net
    volumes:
      - ../app_business:/app

  db_business:
    image: timescale/timescaledb-ha:pg16
    container_name: "db_business"
    environment:
      POSTGRES_DB: business
      POSTGRES_USER: youwei
      POSTGRES_PASSWORD: fromfastapi2genai
    ports:
      - "5118:5432"
    volumes:
      - data_business:/home/postgres/pgdata/data
    restart: unless-stopped
    networks:
      - net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U youwei -d business"]
      interval: 5s
      timeout: 5s
      retries: 5

  db_vector:
    image: timescale/timescaledb-ha:pg16
    container_name: "db_vector"
    environment:
      POSTGRES_DB: vector
      POSTGRES_USER: youwei
      POSTGRES_PASSWORD: fromfastapi2genai
    ports:
      - "5119:5432"
    volumes:
      - data_vector:/home/postgres/pgdata/data
    restart: unless-stopped
    networks:
      - net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U youwei -d vector"]
      interval: 5s
      timeout: 5s
      retries: 5

  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:latest
    container_name: vectorizer-worker
    env_file:
      - ../.env
    environment:
      PGAI_VECTORIZER_WORKER_DB_URL: postgres://youwei:fromfastapi2genai@db_vector:5432/vector
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      db_vector:
        condition: service_healthy
    networks:
      - net

networks:
  net:
    driver: bridge

volumes:
  data_business:
  data_vector:
